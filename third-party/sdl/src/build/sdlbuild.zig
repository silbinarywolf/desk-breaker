//! This file is generated by tools/gen_sdlbuild.zig.

pub const SDLConfig = struct {
    HAVE_GCC_ATOMICS: bool = false,
    HAVE_GCC_SYNC_LOCK_TEST_AND_SET: bool = false,
    SDL_DISABLE_ALLOCA: bool = false,
    HAVE_FLOAT_H: bool = false,
    HAVE_STDARG_H: bool = false,
    HAVE_STDDEF_H: bool = false,
    HAVE_STDINT_H: bool = false,
    HAVE_LIBC: bool = false,
    HAVE_ALLOCA_H: bool = false,
    HAVE_ICONV_H: bool = false,
    HAVE_INTTYPES_H: bool = false,
    HAVE_LIMITS_H: bool = false,
    HAVE_MALLOC_H: bool = false,
    HAVE_MATH_H: bool = false,
    HAVE_MEMORY_H: bool = false,
    HAVE_SIGNAL_H: bool = false,
    HAVE_STDIO_H: bool = false,
    HAVE_STDLIB_H: bool = false,
    HAVE_STRINGS_H: bool = false,
    HAVE_STRING_H: bool = false,
    HAVE_SYS_TYPES_H: bool = false,
    HAVE_WCHAR_H: bool = false,
    HAVE_PTHREAD_NP_H: bool = false,
    HAVE_DLOPEN: bool = false,
    HAVE_MALLOC: bool = false,
    HAVE_FDATASYNC: bool = false,
    HAVE_GETENV: bool = false,
    HAVE_GETHOSTNAME: bool = false,
    HAVE_SETENV: bool = false,
    HAVE_PUTENV: bool = false,
    HAVE_UNSETENV: bool = false,
    HAVE_ABS: bool = false,
    HAVE_BCOPY: bool = false,
    HAVE_MEMSET: bool = false,
    HAVE_MEMCPY: bool = false,
    HAVE_MEMMOVE: bool = false,
    HAVE_MEMCMP: bool = false,
    HAVE_WCSLEN: bool = false,
    HAVE_WCSNLEN: bool = false,
    HAVE_WCSLCPY: bool = false,
    HAVE_WCSLCAT: bool = false,
    HAVE_WCSSTR: bool = false,
    HAVE_WCSCMP: bool = false,
    HAVE_WCSNCMP: bool = false,
    HAVE_WCSTOL: bool = false,
    HAVE_STRLEN: bool = false,
    HAVE_STRNLEN: bool = false,
    HAVE_STRLCPY: bool = false,
    HAVE_STRLCAT: bool = false,
    HAVE_STRPBRK: bool = false,
    HAVE__STRREV: bool = false,
    HAVE_INDEX: bool = false,
    HAVE_RINDEX: bool = false,
    HAVE_STRCHR: bool = false,
    HAVE_STRRCHR: bool = false,
    HAVE_STRSTR: bool = false,
    HAVE_STRNSTR: bool = false,
    HAVE_STRTOK_R: bool = false,
    HAVE_ITOA: bool = false,
    HAVE__LTOA: bool = false,
    HAVE__UITOA: bool = false,
    HAVE__ULTOA: bool = false,
    HAVE_STRTOL: bool = false,
    HAVE_STRTOUL: bool = false,
    HAVE__I64TOA: bool = false,
    HAVE__UI64TOA: bool = false,
    HAVE_STRTOLL: bool = false,
    HAVE_STRTOULL: bool = false,
    HAVE_STRTOD: bool = false,
    HAVE_ATOI: bool = false,
    HAVE_ATOF: bool = false,
    HAVE_STRCMP: bool = false,
    HAVE_STRNCMP: bool = false,
    HAVE_VSSCANF: bool = false,
    HAVE_VSNPRINTF: bool = false,
    HAVE_ACOS: bool = false,
    HAVE_ACOSF: bool = false,
    HAVE_ASIN: bool = false,
    HAVE_ASINF: bool = false,
    HAVE_ATAN: bool = false,
    HAVE_ATANF: bool = false,
    HAVE_ATAN2: bool = false,
    HAVE_ATAN2F: bool = false,
    HAVE_CEIL: bool = false,
    HAVE_CEILF: bool = false,
    HAVE_COPYSIGN: bool = false,
    HAVE_COPYSIGNF: bool = false,
    HAVE__COPYSIGN: bool = false,
    HAVE_COS: bool = false,
    HAVE_COSF: bool = false,
    HAVE_EXP: bool = false,
    HAVE_EXPF: bool = false,
    HAVE_FABS: bool = false,
    HAVE_FABSF: bool = false,
    HAVE_FLOOR: bool = false,
    HAVE_FLOORF: bool = false,
    HAVE_FMOD: bool = false,
    HAVE_FMODF: bool = false,
    HAVE_ISINF: bool = false,
    HAVE_ISINFF: bool = false,
    HAVE_ISINF_FLOAT_MACRO: bool = false,
    HAVE_ISNAN: bool = false,
    HAVE_ISNANF: bool = false,
    HAVE_ISNAN_FLOAT_MACRO: bool = false,
    HAVE_LOG: bool = false,
    HAVE_LOGF: bool = false,
    HAVE_LOG10: bool = false,
    HAVE_LOG10F: bool = false,
    HAVE_LROUND: bool = false,
    HAVE_LROUNDF: bool = false,
    HAVE_MODF: bool = false,
    HAVE_MODFF: bool = false,
    HAVE_POW: bool = false,
    HAVE_POWF: bool = false,
    HAVE_ROUND: bool = false,
    HAVE_ROUNDF: bool = false,
    HAVE_SCALBN: bool = false,
    HAVE_SCALBNF: bool = false,
    HAVE_SIN: bool = false,
    HAVE_SINF: bool = false,
    HAVE_SQRT: bool = false,
    HAVE_SQRTF: bool = false,
    HAVE_TAN: bool = false,
    HAVE_TANF: bool = false,
    HAVE_TRUNC: bool = false,
    HAVE_TRUNCF: bool = false,
    HAVE__FSEEKI64: bool = false,
    HAVE_FOPEN64: bool = false,
    HAVE_FSEEKO: bool = false,
    HAVE_FSEEKO64: bool = false,
    HAVE_MEMFD_CREATE: bool = false,
    HAVE_POSIX_FALLOCATE: bool = false,
    HAVE_SIGACTION: bool = false,
    HAVE_SA_SIGACTION: bool = false,
    HAVE_ST_MTIM: bool = false,
    HAVE_SETJMP: bool = false,
    HAVE_NANOSLEEP: bool = false,
    HAVE_GMTIME_R: bool = false,
    HAVE_LOCALTIME_R: bool = false,
    HAVE_NL_LANGINFO: bool = false,
    HAVE_SYSCONF: bool = false,
    HAVE_SYSCTLBYNAME: bool = false,
    HAVE_CLOCK_GETTIME: bool = false,
    HAVE_GETPAGESIZE: bool = false,
    HAVE_ICONV: bool = false,
    SDL_USE_LIBICONV: bool = false,
    HAVE_PTHREAD_SETNAME_NP: bool = false,
    HAVE_PTHREAD_SET_NAME_NP: bool = false,
    HAVE_SEM_TIMEDWAIT: bool = false,
    HAVE_GETAUXVAL: bool = false,
    HAVE_ELF_AUX_INFO: bool = false,
    HAVE_POLL: bool = false,
    HAVE__EXIT: bool = false,
    HAVE_DBUS_DBUS_H: bool = false,
    HAVE_FCITX: bool = false,
    HAVE_IBUS_IBUS_H: bool = false,
    HAVE_INOTIFY_INIT1: bool = false,
    HAVE_INOTIFY: bool = false,
    HAVE_LIBUSB: bool = false,
    HAVE_O_CLOEXEC: bool = false,
    HAVE_LINUX_INPUT_H: bool = false,
    HAVE_LIBUDEV_H: bool = false,
    HAVE_LIBDECOR_H: bool = false,
    HAVE_LIBURING_H: bool = false,
    HAVE_DDRAW_H: bool = false,
    HAVE_DSOUND_H: bool = false,
    HAVE_DINPUT_H: bool = false,
    HAVE_XINPUT_H: bool = false,
    HAVE_WINDOWS_GAMING_INPUT_H: bool = false,
    HAVE_GAMEINPUT_H: bool = false,
    HAVE_DXGI_H: bool = false,
    HAVE_DXGI1_6_H: bool = false,
    HAVE_MMDEVICEAPI_H: bool = false,
    HAVE_TPCSHRD_H: bool = false,
    HAVE_ROAPI_H: bool = false,
    HAVE_SHELLSCALINGAPI_H: bool = false,
    USE_POSIX_SPAWN: bool = false,
    SDL_DEFAULT_ASSERT_LEVEL_CONFIGURED: bool = false,
    /// SDL internal assertion support, 0 = disabled, 1 = release, 2 = enabled, 3 = paranoid
    SDL_DEFAULT_ASSERT_LEVEL: u4 = 0,
    SDL_AUDIO_DISABLED: bool = false,
    SDL_VIDEO_DISABLED: bool = false,
    SDL_GPU_DISABLED: bool = false,
    SDL_RENDER_DISABLED: bool = false,
    SDL_CAMERA_DISABLED: bool = false,
    SDL_JOYSTICK_DISABLED: bool = false,
    SDL_HAPTIC_DISABLED: bool = false,
    SDL_HIDAPI_DISABLED: bool = false,
    SDL_POWER_DISABLED: bool = false,
    SDL_SENSOR_DISABLED: bool = false,
    SDL_DIALOG_DISABLED: bool = false,
    SDL_THREADS_DISABLED: bool = false,
    SDL_AUDIO_DRIVER_ALSA: bool = false,
    SDL_AUDIO_DRIVER_ALSA_DYNAMIC: []const u8 = &[0]u8{},
    SDL_AUDIO_DRIVER_OPENSLES: bool = false,
    SDL_AUDIO_DRIVER_AAUDIO: bool = false,
    SDL_AUDIO_DRIVER_COREAUDIO: bool = false,
    SDL_AUDIO_DRIVER_DISK: bool = false,
    SDL_AUDIO_DRIVER_DSOUND: bool = false,
    SDL_AUDIO_DRIVER_DUMMY: bool = false,
    SDL_AUDIO_DRIVER_EMSCRIPTEN: bool = false,
    SDL_AUDIO_DRIVER_HAIKU: bool = false,
    SDL_AUDIO_DRIVER_JACK: bool = false,
    SDL_AUDIO_DRIVER_JACK_DYNAMIC: []const u8 = &[0]u8{},
    SDL_AUDIO_DRIVER_NETBSD: bool = false,
    SDL_AUDIO_DRIVER_OSS: bool = false,
    SDL_AUDIO_DRIVER_PIPEWIRE: bool = false,
    SDL_AUDIO_DRIVER_PIPEWIRE_DYNAMIC: []const u8 = &[0]u8{},
    SDL_AUDIO_DRIVER_PULSEAUDIO: bool = false,
    SDL_AUDIO_DRIVER_PULSEAUDIO_DYNAMIC: []const u8 = &[0]u8{},
    SDL_AUDIO_DRIVER_SNDIO: bool = false,
    SDL_AUDIO_DRIVER_SNDIO_DYNAMIC: []const u8 = &[0]u8{},
    SDL_AUDIO_DRIVER_WASAPI: bool = false,
    SDL_AUDIO_DRIVER_VITA: bool = false,
    SDL_AUDIO_DRIVER_PSP: bool = false,
    SDL_AUDIO_DRIVER_PS2: bool = false,
    SDL_AUDIO_DRIVER_N3DS: bool = false,
    SDL_AUDIO_DRIVER_QNX: bool = false,
    SDL_INPUT_LINUXEV: bool = false,
    SDL_INPUT_LINUXKD: bool = false,
    SDL_INPUT_FBSDKBIO: bool = false,
    SDL_INPUT_WSCONS: bool = false,
    SDL_HAVE_MACHINE_JOYSTICK_H: bool = false,
    SDL_JOYSTICK_ANDROID: bool = false,
    SDL_JOYSTICK_DINPUT: bool = false,
    SDL_JOYSTICK_DUMMY: bool = false,
    SDL_JOYSTICK_EMSCRIPTEN: bool = false,
    SDL_JOYSTICK_GAMEINPUT: bool = false,
    SDL_JOYSTICK_HAIKU: bool = false,
    SDL_JOYSTICK_HIDAPI: bool = false,
    SDL_JOYSTICK_IOKIT: bool = false,
    SDL_JOYSTICK_LINUX: bool = false,
    SDL_JOYSTICK_MFI: bool = false,
    SDL_JOYSTICK_N3DS: bool = false,
    SDL_JOYSTICK_PS2: bool = false,
    SDL_JOYSTICK_PSP: bool = false,
    SDL_JOYSTICK_RAWINPUT: bool = false,
    SDL_JOYSTICK_USBHID: bool = false,
    SDL_JOYSTICK_VIRTUAL: bool = false,
    SDL_JOYSTICK_VITA: bool = false,
    SDL_JOYSTICK_WGI: bool = false,
    SDL_JOYSTICK_XINPUT: bool = false,
    SDL_HAPTIC_DUMMY: bool = false,
    SDL_HAPTIC_LINUX: bool = false,
    SDL_HAPTIC_IOKIT: bool = false,
    SDL_HAPTIC_DINPUT: bool = false,
    SDL_HAPTIC_ANDROID: bool = false,
    SDL_LIBUSB_DYNAMIC: []const u8 = &[0]u8{},
    SDL_UDEV_DYNAMIC: []const u8 = &[0]u8{},
    SDL_PROCESS_DUMMY: bool = false,
    SDL_PROCESS_POSIX: bool = false,
    SDL_PROCESS_WINDOWS: bool = false,
    SDL_SENSOR_ANDROID: bool = false,
    SDL_SENSOR_COREMOTION: bool = false,
    SDL_SENSOR_WINDOWS: bool = false,
    SDL_SENSOR_DUMMY: bool = false,
    SDL_SENSOR_VITA: bool = false,
    SDL_SENSOR_N3DS: bool = false,
    SDL_LOADSO_DLOPEN: bool = false,
    SDL_LOADSO_DUMMY: bool = false,
    SDL_LOADSO_WINDOWS: bool = false,
    SDL_THREAD_GENERIC_COND_SUFFIX: bool = false,
    SDL_THREAD_GENERIC_RWLOCK_SUFFIX: bool = false,
    SDL_THREAD_PTHREAD: bool = false,
    SDL_THREAD_PTHREAD_RECURSIVE_MUTEX: bool = false,
    SDL_THREAD_PTHREAD_RECURSIVE_MUTEX_NP: bool = false,
    SDL_THREAD_WINDOWS: bool = false,
    SDL_THREAD_VITA: bool = false,
    SDL_THREAD_PSP: bool = false,
    SDL_THREAD_PS2: bool = false,
    SDL_THREAD_N3DS: bool = false,
    SDL_TIME_UNIX: bool = false,
    SDL_TIME_WINDOWS: bool = false,
    SDL_TIME_VITA: bool = false,
    SDL_TIME_PSP: bool = false,
    SDL_TIME_PS2: bool = false,
    SDL_TIME_N3DS: bool = false,
    SDL_TIMER_HAIKU: bool = false,
    SDL_TIMER_UNIX: bool = false,
    SDL_TIMER_WINDOWS: bool = false,
    SDL_TIMER_VITA: bool = false,
    SDL_TIMER_PSP: bool = false,
    SDL_TIMER_PS2: bool = false,
    SDL_TIMER_N3DS: bool = false,
    SDL_VIDEO_DRIVER_ANDROID: bool = false,
    SDL_VIDEO_DRIVER_COCOA: bool = false,
    SDL_VIDEO_DRIVER_DUMMY: bool = false,
    SDL_VIDEO_DRIVER_EMSCRIPTEN: bool = false,
    SDL_VIDEO_DRIVER_HAIKU: bool = false,
    SDL_VIDEO_DRIVER_KMSDRM: bool = false,
    SDL_VIDEO_DRIVER_KMSDRM_DYNAMIC: []const u8 = &[0]u8{},
    SDL_VIDEO_DRIVER_KMSDRM_DYNAMIC_GBM: []const u8 = &[0]u8{},
    SDL_VIDEO_DRIVER_N3DS: bool = false,
    SDL_VIDEO_DRIVER_OFFSCREEN: bool = false,
    SDL_VIDEO_DRIVER_PS2: bool = false,
    SDL_VIDEO_DRIVER_PSP: bool = false,
    SDL_VIDEO_DRIVER_RISCOS: bool = false,
    SDL_VIDEO_DRIVER_ROCKCHIP: bool = false,
    SDL_VIDEO_DRIVER_RPI: bool = false,
    SDL_VIDEO_DRIVER_UIKIT: bool = false,
    SDL_VIDEO_DRIVER_VITA: bool = false,
    SDL_VIDEO_DRIVER_VIVANTE: bool = false,
    SDL_VIDEO_DRIVER_VIVANTE_VDK: bool = false,
    SDL_VIDEO_DRIVER_OPENVR: bool = false,
    SDL_VIDEO_DRIVER_WAYLAND: bool = false,
    SDL_VIDEO_DRIVER_WAYLAND_DYNAMIC: []const u8 = &[0]u8{},
    SDL_VIDEO_DRIVER_WAYLAND_DYNAMIC_CURSOR: []const u8 = &[0]u8{},
    SDL_VIDEO_DRIVER_WAYLAND_DYNAMIC_EGL: []const u8 = &[0]u8{},
    SDL_VIDEO_DRIVER_WAYLAND_DYNAMIC_LIBDECOR: []const u8 = &[0]u8{},
    SDL_VIDEO_DRIVER_WAYLAND_DYNAMIC_XKBCOMMON: []const u8 = &[0]u8{},
    SDL_VIDEO_DRIVER_WINDOWS: bool = false,
    SDL_VIDEO_DRIVER_X11: bool = false,
    SDL_VIDEO_DRIVER_X11_DYNAMIC: []const u8 = &[0]u8{},
    SDL_VIDEO_DRIVER_X11_DYNAMIC_XCURSOR: []const u8 = &[0]u8{},
    SDL_VIDEO_DRIVER_X11_DYNAMIC_XEXT: []const u8 = &[0]u8{},
    SDL_VIDEO_DRIVER_X11_DYNAMIC_XFIXES: []const u8 = &[0]u8{},
    SDL_VIDEO_DRIVER_X11_DYNAMIC_XINPUT2: []const u8 = &[0]u8{},
    SDL_VIDEO_DRIVER_X11_DYNAMIC_XRANDR: []const u8 = &[0]u8{},
    SDL_VIDEO_DRIVER_X11_DYNAMIC_XSS: []const u8 = &[0]u8{},
    SDL_VIDEO_DRIVER_X11_HAS_XKBLOOKUPKEYSYM: bool = false,
    SDL_VIDEO_DRIVER_X11_SUPPORTS_GENERIC_EVENTS: bool = false,
    SDL_VIDEO_DRIVER_X11_XCURSOR: bool = false,
    SDL_VIDEO_DRIVER_X11_XDBE: bool = false,
    SDL_VIDEO_DRIVER_X11_XFIXES: bool = false,
    SDL_VIDEO_DRIVER_X11_XINPUT2: bool = false,
    SDL_VIDEO_DRIVER_X11_XINPUT2_SUPPORTS_MULTITOUCH: bool = false,
    SDL_VIDEO_DRIVER_X11_XRANDR: bool = false,
    SDL_VIDEO_DRIVER_X11_XSCRNSAVER: bool = false,
    SDL_VIDEO_DRIVER_X11_XSHAPE: bool = false,
    SDL_VIDEO_DRIVER_X11_XSYNC: bool = false,
    SDL_VIDEO_DRIVER_QNX: bool = false,
    SDL_VIDEO_RENDER_D3D: bool = false,
    SDL_VIDEO_RENDER_D3D11: bool = false,
    SDL_VIDEO_RENDER_D3D12: bool = false,
    SDL_VIDEO_RENDER_GPU: bool = false,
    SDL_VIDEO_RENDER_METAL: bool = false,
    SDL_VIDEO_RENDER_VULKAN: bool = false,
    SDL_VIDEO_RENDER_OGL: bool = false,
    SDL_VIDEO_RENDER_OGL_ES2: bool = false,
    SDL_VIDEO_RENDER_PS2: bool = false,
    SDL_VIDEO_RENDER_PSP: bool = false,
    SDL_VIDEO_RENDER_VITA_GXM: bool = false,
    SDL_VIDEO_OPENGL: bool = false,
    SDL_VIDEO_OPENGL_ES: bool = false,
    SDL_VIDEO_OPENGL_ES2: bool = false,
    SDL_VIDEO_OPENGL_CGL: bool = false,
    SDL_VIDEO_OPENGL_GLX: bool = false,
    SDL_VIDEO_OPENGL_WGL: bool = false,
    SDL_VIDEO_OPENGL_EGL: bool = false,
    SDL_VIDEO_VULKAN: bool = false,
    SDL_VIDEO_METAL: bool = false,
    SDL_GPU_D3D11: bool = false,
    SDL_GPU_D3D12: bool = false,
    SDL_GPU_VULKAN: bool = false,
    SDL_GPU_METAL: bool = false,
    SDL_POWER_ANDROID: bool = false,
    SDL_POWER_LINUX: bool = false,
    SDL_POWER_WINDOWS: bool = false,
    SDL_POWER_MACOSX: bool = false,
    SDL_POWER_UIKIT: bool = false,
    SDL_POWER_HAIKU: bool = false,
    SDL_POWER_EMSCRIPTEN: bool = false,
    SDL_POWER_HARDWIRED: bool = false,
    SDL_POWER_VITA: bool = false,
    SDL_POWER_PSP: bool = false,
    SDL_POWER_N3DS: bool = false,
    SDL_FILESYSTEM_ANDROID: bool = false,
    SDL_FILESYSTEM_HAIKU: bool = false,
    SDL_FILESYSTEM_COCOA: bool = false,
    SDL_FILESYSTEM_DUMMY: bool = false,
    SDL_FILESYSTEM_RISCOS: bool = false,
    SDL_FILESYSTEM_UNIX: bool = false,
    SDL_FILESYSTEM_WINDOWS: bool = false,
    SDL_FILESYSTEM_EMSCRIPTEN: bool = false,
    SDL_FILESYSTEM_VITA: bool = false,
    SDL_FILESYSTEM_PSP: bool = false,
    SDL_FILESYSTEM_PS2: bool = false,
    SDL_FILESYSTEM_N3DS: bool = false,
    SDL_STORAGE_STEAM: bool = false,
    SDL_FSOPS_POSIX: bool = false,
    SDL_FSOPS_WINDOWS: bool = false,
    SDL_FSOPS_DUMMY: bool = false,
    SDL_CAMERA_DRIVER_DUMMY: bool = false,
    SDL_CAMERA_DRIVER_V4L2: bool = false,
    SDL_CAMERA_DRIVER_COREMEDIA: bool = false,
    SDL_CAMERA_DRIVER_ANDROID: bool = false,
    SDL_CAMERA_DRIVER_EMSCRIPTEN: bool = false,
    SDL_CAMERA_DRIVER_MEDIAFOUNDATION: bool = false,
    SDL_CAMERA_DRIVER_PIPEWIRE: bool = false,
    SDL_CAMERA_DRIVER_PIPEWIRE_DYNAMIC: []const u8 = &[0]u8{},
    SDL_CAMERA_DRIVER_VITA: bool = false,
    SDL_DIALOG_DUMMY: bool = false,
    SDL_ALTIVEC_BLITTERS: bool = false,
    DYNAPI_NEEDS_DLOPEN: bool = false,
    SDL_USE_IME: bool = false,
    SDL_DISABLE_WINDOWS_IME: bool = false,
    SDL_GDK_TEXTINPUT: bool = false,
    SDL_IPHONE_KEYBOARD: bool = false,
    SDL_IPHONE_LAUNCHSCREEN: bool = false,
    SDL_VIDEO_VITA_PIB: bool = false,
    SDL_VIDEO_VITA_PVR: bool = false,
    SDL_VIDEO_VITA_PVR_OGL: bool = false,
    SDL_LIBDECOR_VERSION_MAJOR: u32 = 0,
    SDL_LIBDECOR_VERSION_MINOR: u32 = 0,
    SDL_LIBDECOR_VERSION_PATCH: u32 = 0,
    SDL_DISABLE_SSE: bool = false,
    SDL_DISABLE_SSE2: bool = false,
    SDL_DISABLE_SSE3: bool = false,
    SDL_DISABLE_SSE4_1: bool = false,
    SDL_DISABLE_SSE4_2: bool = false,
    SDL_DISABLE_AVX: bool = false,
    SDL_DISABLE_AVX2: bool = false,
    SDL_DISABLE_AVX512F: bool = false,
    SDL_DISABLE_MMX: bool = false,
    SDL_DISABLE_LSX: bool = false,
    SDL_DISABLE_LASX: bool = false,
    SDL_DISABLE_NEON: bool = false,
};

pub const c_files = [_][]const u8{
    "src/SDL.c",
    "src/SDL_assert.c",
    "src/SDL_error.c",
    "src/SDL_guid.c",
    "src/SDL_hashtable.c",
    "src/SDL_hints.c",
    "src/SDL_list.c",
    "src/SDL_log.c",
    "src/SDL_properties.c",
    "src/SDL_utils.c",
};

pub const atomic = struct {
    pub const c_files = [_][]const u8{
        "src/atomic/SDL_atomic.c",
        "src/atomic/SDL_spinlock.c",
    };
};

pub const audio = struct {
    pub const c_files = [_][]const u8{
        "src/audio/SDL_audio.c",
        "src/audio/SDL_audiocvt.c",
        "src/audio/SDL_audiodev.c",
        "src/audio/SDL_audioqueue.c",
        "src/audio/SDL_audioresample.c",
        "src/audio/SDL_audiotypecvt.c",
        "src/audio/SDL_mixer.c",
        "src/audio/SDL_wave.c",
    };

    pub const aaudio = struct {
        pub const c_files = [_][]const u8{
            "src/audio/aaudio/SDL_aaudio.c",
        };
    };

    pub const alsa = struct {
        pub const c_files = [_][]const u8{
            "src/audio/alsa/SDL_alsa_audio.c",
        };
    };

    pub const coreaudio = struct {
        pub const objective_c_files = [_][]const u8{
            "src/audio/coreaudio/SDL_coreaudio.m",
        };
    };

    pub const directsound = struct {
        pub const c_files = [_][]const u8{
            "src/audio/directsound/SDL_directsound.c",
        };
    };

    pub const disk = struct {
        pub const c_files = [_][]const u8{
            "src/audio/disk/SDL_diskaudio.c",
        };
    };

    pub const dsp = struct {
        pub const c_files = [_][]const u8{
            "src/audio/dsp/SDL_dspaudio.c",
        };
    };

    pub const dummy = struct {
        pub const c_files = [_][]const u8{
            "src/audio/dummy/SDL_dummyaudio.c",
        };
    };

    pub const emscripten = struct {
        pub const c_files = [_][]const u8{
            "src/audio/emscripten/SDL_emscriptenaudio.c",
        };
    };

    pub const haiku = struct {
        pub const cpp_files = [_][]const u8{
            "src/audio/haiku/SDL_haikuaudio.cc",
        };
    };

    pub const jack = struct {
        pub const c_files = [_][]const u8{
            "src/audio/jack/SDL_jackaudio.c",
        };
    };

    pub const n3ds = struct {
        pub const c_files = [_][]const u8{
            "src/audio/n3ds/SDL_n3dsaudio.c",
        };
    };

    pub const netbsd = struct {
        pub const c_files = [_][]const u8{
            "src/audio/netbsd/SDL_netbsdaudio.c",
        };
    };

    pub const openslES = struct {
        pub const c_files = [_][]const u8{
            "src/audio/openslES/SDL_openslES.c",
        };
    };

    pub const pipewire = struct {
        pub const c_files = [_][]const u8{
            "src/audio/pipewire/SDL_pipewire.c",
        };
    };

    pub const ps2 = struct {
        pub const c_files = [_][]const u8{
            "src/audio/ps2/SDL_ps2audio.c",
        };
    };

    pub const psp = struct {
        pub const c_files = [_][]const u8{
            "src/audio/psp/SDL_pspaudio.c",
        };
    };

    pub const pulseaudio = struct {
        pub const c_files = [_][]const u8{
            "src/audio/pulseaudio/SDL_pulseaudio.c",
        };
    };

    pub const qnx = struct {
        pub const c_files = [_][]const u8{
            "src/audio/qnx/SDL_qsa_audio.c",
        };
    };

    pub const sndio = struct {
        pub const c_files = [_][]const u8{
            "src/audio/sndio/SDL_sndioaudio.c",
        };
    };

    pub const vita = struct {
        pub const c_files = [_][]const u8{
            "src/audio/vita/SDL_vitaaudio.c",
        };
    };

    pub const wasapi = struct {
        pub const c_files = [_][]const u8{
            "src/audio/wasapi/SDL_wasapi.c",
            "src/audio/wasapi/SDL_wasapi_win32.c",
        };
    };
};

pub const camera = struct {
    pub const c_files = [_][]const u8{
        "src/camera/SDL_camera.c",
    };

    pub const android = struct {
        pub const c_files = [_][]const u8{
            "src/camera/android/SDL_camera_android.c",
        };
    };

    pub const coremedia = struct {
        pub const objective_c_files = [_][]const u8{
            "src/camera/coremedia/SDL_camera_coremedia.m",
        };
    };

    pub const dummy = struct {
        pub const c_files = [_][]const u8{
            "src/camera/dummy/SDL_camera_dummy.c",
        };
    };

    pub const emscripten = struct {
        pub const c_files = [_][]const u8{
            "src/camera/emscripten/SDL_camera_emscripten.c",
        };
    };

    pub const mediafoundation = struct {
        pub const c_files = [_][]const u8{
            "src/camera/mediafoundation/SDL_camera_mediafoundation.c",
        };
    };

    pub const pipewire = struct {
        pub const c_files = [_][]const u8{
            "src/camera/pipewire/SDL_camera_pipewire.c",
        };
    };

    pub const v4l2 = struct {
        pub const c_files = [_][]const u8{
            "src/camera/v4l2/SDL_camera_v4l2.c",
        };
    };

    pub const vita = struct {
        pub const c_files = [_][]const u8{
            "src/camera/vita/SDL_camera_vita.c",
        };
    };
};

pub const core = struct {
    pub const c_files = [_][]const u8{
        "src/core/SDL_core_unsupported.c",
    };

    pub const android = struct {
        pub const c_files = [_][]const u8{
            "src/core/android/SDL_android.c",
        };
    };

    pub const freebsd = struct {
        pub const c_files = [_][]const u8{
            "src/core/freebsd/SDL_evdev_kbd_freebsd.c",
        };
    };

    pub const gdk = struct {
        pub const cpp_files = [_][]const u8{
            "src/core/gdk/SDL_gdk.cpp",
        };
    };

    pub const haiku = struct {
        pub const cpp_files = [_][]const u8{
            "src/core/haiku/SDL_BeApp.cc",
        };
    };

    pub const linux = struct {
        pub const c_files = [_][]const u8{
            "src/core/linux/SDL_dbus.c",
            "src/core/linux/SDL_evdev.c",
            "src/core/linux/SDL_evdev_capabilities.c",
            "src/core/linux/SDL_evdev_kbd.c",
            "src/core/linux/SDL_fcitx.c",
            "src/core/linux/SDL_ibus.c",
            "src/core/linux/SDL_ime.c",
            "src/core/linux/SDL_sandbox.c",
            "src/core/linux/SDL_system_theme.c",
            "src/core/linux/SDL_threadprio.c",
            "src/core/linux/SDL_udev.c",
        };
    };

    pub const openbsd = struct {
        pub const c_files = [_][]const u8{
            "src/core/openbsd/SDL_wscons_kbd.c",
            "src/core/openbsd/SDL_wscons_mouse.c",
        };
    };

    pub const unix = struct {
        pub const c_files = [_][]const u8{
            "src/core/unix/SDL_appid.c",
            "src/core/unix/SDL_poll.c",
        };
    };

    pub const windows = struct {
        pub const c_files = [_][]const u8{
            "src/core/windows/SDL_hid.c",
            "src/core/windows/SDL_immdevice.c",
            "src/core/windows/SDL_windows.c",
            "src/core/windows/SDL_xinput.c",
            "src/core/windows/pch.c",
        };

        pub const cpp_files = [_][]const u8{
            "src/core/windows/pch_cpp.cpp",
        };

        pub const win32_resource_files = [_][]const u8{
            "src/core/windows/version.rc",
        };
    };
};

pub const cpuinfo = struct {
    pub const c_files = [_][]const u8{
        "src/cpuinfo/SDL_cpuinfo.c",
    };
};

pub const dialog = struct {
    pub const c_files = [_][]const u8{
        "src/dialog/SDL_dialog.c",
        "src/dialog/SDL_dialog_utils.c",
    };

    pub const android = struct {
        pub const c_files = [_][]const u8{
            "src/dialog/android/SDL_androiddialog.c",
        };
    };

    pub const cocoa = struct {
        pub const objective_c_files = [_][]const u8{
            "src/dialog/cocoa/SDL_cocoadialog.m",
        };
    };

    pub const dummy = struct {
        pub const c_files = [_][]const u8{
            "src/dialog/dummy/SDL_dummydialog.c",
        };
    };

    pub const haiku = struct {
        pub const cpp_files = [_][]const u8{
            "src/dialog/haiku/SDL_haikudialog.cc",
        };
    };

    pub const unix = struct {
        pub const c_files = [_][]const u8{
            "src/dialog/unix/SDL_portaldialog.c",
            "src/dialog/unix/SDL_unixdialog.c",
            "src/dialog/unix/SDL_zenitydialog.c",
        };
    };

    pub const windows = struct {
        pub const c_files = [_][]const u8{
            "src/dialog/windows/SDL_windowsdialog.c",
        };
    };
};

pub const dynapi = struct {
    pub const c_files = [_][]const u8{
        "src/dynapi/SDL_dynapi.c",
    };
};

pub const events = struct {
    pub const c_files = [_][]const u8{
        "src/events/SDL_categories.c",
        "src/events/SDL_clipboardevents.c",
        "src/events/SDL_displayevents.c",
        "src/events/SDL_dropevents.c",
        "src/events/SDL_events.c",
        "src/events/SDL_keyboard.c",
        "src/events/SDL_keymap.c",
        "src/events/SDL_keysym_to_keycode.c",
        "src/events/SDL_keysym_to_scancode.c",
        "src/events/SDL_mouse.c",
        "src/events/SDL_pen.c",
        "src/events/SDL_quit.c",
        "src/events/SDL_scancode_tables.c",
        "src/events/SDL_touch.c",
        "src/events/SDL_windowevents.c",
        "src/events/imKStoUCS.c",
    };
};

pub const file = struct {
    pub const c_files = [_][]const u8{
        "src/file/SDL_iostream.c",
    };

    pub const n3ds = struct {
        pub const c_files = [_][]const u8{
            "src/file/n3ds/SDL_iostreamromfs.c",
        };
    };
};

pub const filesystem = struct {
    pub const c_files = [_][]const u8{
        "src/filesystem/SDL_filesystem.c",
    };

    pub const android = struct {
        pub const c_files = [_][]const u8{
            "src/filesystem/android/SDL_sysfilesystem.c",
        };
    };

    pub const cocoa = struct {
        pub const objective_c_files = [_][]const u8{
            "src/filesystem/cocoa/SDL_sysfilesystem.m",
        };
    };

    pub const dummy = struct {
        pub const c_files = [_][]const u8{
            "src/filesystem/dummy/SDL_sysfilesystem.c",
            "src/filesystem/dummy/SDL_sysfsops.c",
        };
    };

    pub const emscripten = struct {
        pub const c_files = [_][]const u8{
            "src/filesystem/emscripten/SDL_sysfilesystem.c",
        };
    };

    pub const gdk = struct {
        pub const cpp_files = [_][]const u8{
            "src/filesystem/gdk/SDL_sysfilesystem.cpp",
        };
    };

    pub const haiku = struct {
        pub const cpp_files = [_][]const u8{
            "src/filesystem/haiku/SDL_sysfilesystem.cc",
        };
    };

    pub const n3ds = struct {
        pub const c_files = [_][]const u8{
            "src/filesystem/n3ds/SDL_sysfilesystem.c",
        };
    };

    pub const posix = struct {
        pub const c_files = [_][]const u8{
            "src/filesystem/posix/SDL_sysfsops.c",
        };
    };

    pub const ps2 = struct {
        pub const c_files = [_][]const u8{
            "src/filesystem/ps2/SDL_sysfilesystem.c",
        };
    };

    pub const psp = struct {
        pub const c_files = [_][]const u8{
            "src/filesystem/psp/SDL_sysfilesystem.c",
        };
    };

    pub const riscos = struct {
        pub const c_files = [_][]const u8{
            "src/filesystem/riscos/SDL_sysfilesystem.c",
        };
    };

    pub const unix = struct {
        pub const c_files = [_][]const u8{
            "src/filesystem/unix/SDL_sysfilesystem.c",
        };
    };

    pub const vita = struct {
        pub const c_files = [_][]const u8{
            "src/filesystem/vita/SDL_sysfilesystem.c",
        };
    };

    pub const windows = struct {
        pub const c_files = [_][]const u8{
            "src/filesystem/windows/SDL_sysfilesystem.c",
            "src/filesystem/windows/SDL_sysfsops.c",
        };
    };
};

pub const gpu = struct {
    pub const c_files = [_][]const u8{
        "src/gpu/SDL_gpu.c",
    };

    pub const d3d11 = struct {
        pub const c_files = [_][]const u8{
            "src/gpu/d3d11/SDL_gpu_d3d11.c",
        };
    };

    pub const d3d12 = struct {
        pub const c_files = [_][]const u8{
            "src/gpu/d3d12/SDL_gpu_d3d12.c",
        };
    };

    pub const metal = struct {
        pub const objective_c_files = [_][]const u8{
            "src/gpu/metal/SDL_gpu_metal.m",
        };
    };

    pub const vulkan = struct {
        pub const c_files = [_][]const u8{
            "src/gpu/vulkan/SDL_gpu_vulkan.c",
        };
    };
};

pub const haptic = struct {
    pub const c_files = [_][]const u8{
        "src/haptic/SDL_haptic.c",
    };

    pub const android = struct {
        pub const c_files = [_][]const u8{
            "src/haptic/android/SDL_syshaptic.c",
        };
    };

    pub const darwin = struct {
        pub const c_files = [_][]const u8{
            "src/haptic/darwin/SDL_syshaptic.c",
        };
    };

    pub const dummy = struct {
        pub const c_files = [_][]const u8{
            "src/haptic/dummy/SDL_syshaptic.c",
        };
    };

    pub const linux = struct {
        pub const c_files = [_][]const u8{
            "src/haptic/linux/SDL_syshaptic.c",
        };
    };

    pub const windows = struct {
        pub const c_files = [_][]const u8{
            "src/haptic/windows/SDL_dinputhaptic.c",
            "src/haptic/windows/SDL_windowshaptic.c",
        };
    };
};

pub const hidapi = struct {
    pub const c_files = [_][]const u8{
        "src/hidapi/SDL_hidapi.c",
    };

    pub const android = struct {
        pub const cpp_files = [_][]const u8{
            "src/hidapi/android/hid.cpp",
        };
    };

    pub const hidtest = struct {
        pub const c_files = [_][]const u8{
            "src/hidapi/hidtest/test.c",
        };
    };

    pub const ios = struct {
        pub const objective_c_files = [_][]const u8{
            "src/hidapi/ios/hid.m",
        };
    };

    pub const libusb = struct {
        pub const c_files = [_][]const u8{
            "src/hidapi/libusb/hid.c",
        };
    };

    pub const linux = struct {
        pub const c_files = [_][]const u8{
            "src/hidapi/linux/hid.c",
        };
    };

    pub const mac = struct {
        pub const c_files = [_][]const u8{
            "src/hidapi/mac/hid.c",
        };
    };

    pub const netbsd = struct {
        pub const c_files = [_][]const u8{
            "src/hidapi/netbsd/hid.c",
        };
    };

    pub const testgui = struct {
        pub const cpp_files = [_][]const u8{
            "src/hidapi/testgui/test.cpp",
        };

        pub const objective_c_files = [_][]const u8{
            "src/hidapi/testgui/mac_support_cocoa.m",
        };
    };

    pub const windows = struct {
        pub const c_files = [_][]const u8{
            "src/hidapi/windows/hid.c",
            "src/hidapi/windows/hidapi_descriptor_reconstruct.c",
        };

        pub const win32_resource_files = [_][]const u8{
            "src/hidapi/windows/hidapi.rc",
        };

        pub const pp_data_dump = struct {
            pub const c_files = [_][]const u8{
                "src/hidapi/windows/pp_data_dump/pp_data_dump.c",
            };
        };
    };
};

pub const io = struct {
    pub const c_files = [_][]const u8{
        "src/io/SDL_asyncio.c",
        "src/io/SDL_iostream.c",
    };

    pub const generic = struct {
        pub const c_files = [_][]const u8{
            "src/io/generic/SDL_asyncio_generic.c",
        };
    };

    pub const io_uring = struct {
        pub const c_files = [_][]const u8{
            "src/io/io_uring/SDL_asyncio_liburing.c",
        };
    };

    pub const n3ds = struct {
        pub const c_files = [_][]const u8{
            "src/io/n3ds/SDL_iostreamromfs.c",
        };
    };

    pub const windows = struct {
        pub const c_files = [_][]const u8{
            "src/io/windows/SDL_asyncio_windows_ioring.c",
        };
    };
};

pub const joystick = struct {
    pub const c_files = [_][]const u8{
        "src/joystick/SDL_gamepad.c",
        "src/joystick/SDL_joystick.c",
        "src/joystick/SDL_steam_virtual_gamepad.c",
        "src/joystick/controller_type.c",
    };

    pub const android = struct {
        pub const c_files = [_][]const u8{
            "src/joystick/android/SDL_sysjoystick.c",
        };
    };

    pub const apple = struct {
        pub const objective_c_files = [_][]const u8{
            "src/joystick/apple/SDL_mfijoystick.m",
        };
    };

    pub const bsd = struct {
        pub const c_files = [_][]const u8{
            "src/joystick/bsd/SDL_bsdjoystick.c",
        };
    };

    pub const darwin = struct {
        pub const c_files = [_][]const u8{
            "src/joystick/darwin/SDL_iokitjoystick.c",
        };
    };

    pub const dummy = struct {
        pub const c_files = [_][]const u8{
            "src/joystick/dummy/SDL_sysjoystick.c",
        };
    };

    pub const emscripten = struct {
        pub const c_files = [_][]const u8{
            "src/joystick/emscripten/SDL_sysjoystick.c",
        };
    };

    pub const gdk = struct {
        pub const c_files = [_][]const u8{
            "src/joystick/gdk/SDL_gameinputjoystick.c",
        };
    };

    pub const haiku = struct {
        pub const cpp_files = [_][]const u8{
            "src/joystick/haiku/SDL_haikujoystick.cc",
        };
    };

    pub const hidapi = struct {
        pub const c_files = [_][]const u8{
            "src/joystick/hidapi/SDL_hidapi_combined.c",
            "src/joystick/hidapi/SDL_hidapi_gamecube.c",
            "src/joystick/hidapi/SDL_hidapi_luna.c",
            "src/joystick/hidapi/SDL_hidapi_ps3.c",
            "src/joystick/hidapi/SDL_hidapi_ps4.c",
            "src/joystick/hidapi/SDL_hidapi_ps5.c",
            "src/joystick/hidapi/SDL_hidapi_rumble.c",
            "src/joystick/hidapi/SDL_hidapi_shield.c",
            "src/joystick/hidapi/SDL_hidapi_stadia.c",
            "src/joystick/hidapi/SDL_hidapi_steam.c",
            "src/joystick/hidapi/SDL_hidapi_steam_hori.c",
            "src/joystick/hidapi/SDL_hidapi_steamdeck.c",
            "src/joystick/hidapi/SDL_hidapi_switch.c",
            "src/joystick/hidapi/SDL_hidapi_wii.c",
            "src/joystick/hidapi/SDL_hidapi_xbox360.c",
            "src/joystick/hidapi/SDL_hidapi_xbox360w.c",
            "src/joystick/hidapi/SDL_hidapi_xboxone.c",
            "src/joystick/hidapi/SDL_hidapijoystick.c",
        };
    };

    pub const linux = struct {
        pub const c_files = [_][]const u8{
            "src/joystick/linux/SDL_sysjoystick.c",
        };
    };

    pub const n3ds = struct {
        pub const c_files = [_][]const u8{
            "src/joystick/n3ds/SDL_sysjoystick.c",
        };
    };

    pub const ps2 = struct {
        pub const c_files = [_][]const u8{
            "src/joystick/ps2/SDL_sysjoystick.c",
        };
    };

    pub const psp = struct {
        pub const c_files = [_][]const u8{
            "src/joystick/psp/SDL_sysjoystick.c",
        };
    };

    pub const steam = struct {
        pub const c_files = [_][]const u8{
            "src/joystick/steam/SDL_steamcontroller.c",
        };
    };

    pub const virtual = struct {
        pub const c_files = [_][]const u8{
            "src/joystick/virtual/SDL_virtualjoystick.c",
        };
    };

    pub const vita = struct {
        pub const c_files = [_][]const u8{
            "src/joystick/vita/SDL_sysjoystick.c",
        };
    };

    pub const windows = struct {
        pub const c_files = [_][]const u8{
            "src/joystick/windows/SDL_dinputjoystick.c",
            "src/joystick/windows/SDL_rawinputjoystick.c",
            "src/joystick/windows/SDL_windows_gaming_input.c",
            "src/joystick/windows/SDL_windowsjoystick.c",
            "src/joystick/windows/SDL_xinputjoystick.c",
        };
    };
};

pub const libm = struct {
    pub const c_files = [_][]const u8{
        "src/libm/e_atan2.c",
        "src/libm/e_exp.c",
        "src/libm/e_fmod.c",
        "src/libm/e_log.c",
        "src/libm/e_log10.c",
        "src/libm/e_pow.c",
        "src/libm/e_rem_pio2.c",
        "src/libm/e_sqrt.c",
        "src/libm/k_cos.c",
        "src/libm/k_rem_pio2.c",
        "src/libm/k_sin.c",
        "src/libm/k_tan.c",
        "src/libm/s_atan.c",
        "src/libm/s_copysign.c",
        "src/libm/s_cos.c",
        "src/libm/s_fabs.c",
        "src/libm/s_floor.c",
        "src/libm/s_isinf.c",
        "src/libm/s_isinff.c",
        "src/libm/s_isnan.c",
        "src/libm/s_isnanf.c",
        "src/libm/s_modf.c",
        "src/libm/s_scalbn.c",
        "src/libm/s_sin.c",
        "src/libm/s_tan.c",
    };
};

pub const loadso = struct {
    pub const dlopen = struct {
        pub const c_files = [_][]const u8{
            "src/loadso/dlopen/SDL_sysloadso.c",
        };
    };

    pub const dummy = struct {
        pub const c_files = [_][]const u8{
            "src/loadso/dummy/SDL_sysloadso.c",
        };
    };

    pub const windows = struct {
        pub const c_files = [_][]const u8{
            "src/loadso/windows/SDL_sysloadso.c",
        };
    };
};

pub const locale = struct {
    pub const c_files = [_][]const u8{
        "src/locale/SDL_locale.c",
    };

    pub const android = struct {
        pub const c_files = [_][]const u8{
            "src/locale/android/SDL_syslocale.c",
        };
    };

    pub const dummy = struct {
        pub const c_files = [_][]const u8{
            "src/locale/dummy/SDL_syslocale.c",
        };
    };

    pub const emscripten = struct {
        pub const c_files = [_][]const u8{
            "src/locale/emscripten/SDL_syslocale.c",
        };
    };

    pub const haiku = struct {
        pub const cpp_files = [_][]const u8{
            "src/locale/haiku/SDL_syslocale.cc",
        };
    };

    pub const macos = struct {
        pub const objective_c_files = [_][]const u8{
            "src/locale/macos/SDL_syslocale.m",
        };
    };

    pub const n3ds = struct {
        pub const c_files = [_][]const u8{
            "src/locale/n3ds/SDL_syslocale.c",
        };
    };

    pub const psp = struct {
        pub const c_files = [_][]const u8{
            "src/locale/psp/SDL_syslocale.c",
        };
    };

    pub const unix = struct {
        pub const c_files = [_][]const u8{
            "src/locale/unix/SDL_syslocale.c",
        };
    };

    pub const vita = struct {
        pub const c_files = [_][]const u8{
            "src/locale/vita/SDL_syslocale.c",
        };
    };

    pub const windows = struct {
        pub const c_files = [_][]const u8{
            "src/locale/windows/SDL_syslocale.c",
        };
    };
};

pub const main = struct {
    pub const c_files = [_][]const u8{
        "src/main/SDL_main_callbacks.c",
        "src/main/SDL_runapp.c",
    };

    pub const emscripten = struct {
        pub const c_files = [_][]const u8{
            "src/main/emscripten/SDL_sysmain_callbacks.c",
            "src/main/emscripten/SDL_sysmain_runapp.c",
        };
    };

    pub const gdk = struct {
        pub const cpp_files = [_][]const u8{
            "src/main/gdk/SDL_sysmain_runapp.cpp",
        };
    };

    pub const generic = struct {
        pub const c_files = [_][]const u8{
            "src/main/generic/SDL_sysmain_callbacks.c",
        };
    };

    pub const ios = struct {
        pub const objective_c_files = [_][]const u8{
            "src/main/ios/SDL_sysmain_callbacks.m",
        };
    };

    pub const n3ds = struct {
        pub const c_files = [_][]const u8{
            "src/main/n3ds/SDL_sysmain_runapp.c",
        };
    };

    pub const ngage = struct {
        pub const cpp_files = [_][]const u8{
            "src/main/ngage/SDL_sysmain_runapp.cpp",
        };
    };

    pub const ps2 = struct {
        pub const c_files = [_][]const u8{
            "src/main/ps2/SDL_sysmain_runapp.c",
        };
    };

    pub const psp = struct {
        pub const c_files = [_][]const u8{
            "src/main/psp/SDL_sysmain_runapp.c",
        };
    };

    pub const windows = struct {
        pub const c_files = [_][]const u8{
            "src/main/windows/SDL_sysmain_runapp.c",
        };
    };
};

pub const misc = struct {
    pub const c_files = [_][]const u8{
        "src/misc/SDL_url.c",
    };

    pub const android = struct {
        pub const c_files = [_][]const u8{
            "src/misc/android/SDL_sysurl.c",
        };
    };

    pub const dummy = struct {
        pub const c_files = [_][]const u8{
            "src/misc/dummy/SDL_sysurl.c",
        };
    };

    pub const emscripten = struct {
        pub const c_files = [_][]const u8{
            "src/misc/emscripten/SDL_sysurl.c",
        };
    };

    pub const haiku = struct {
        pub const cpp_files = [_][]const u8{
            "src/misc/haiku/SDL_sysurl.cc",
        };
    };

    pub const ios = struct {
        pub const objective_c_files = [_][]const u8{
            "src/misc/ios/SDL_sysurl.m",
        };
    };

    pub const macos = struct {
        pub const objective_c_files = [_][]const u8{
            "src/misc/macos/SDL_sysurl.m",
        };
    };

    pub const riscos = struct {
        pub const c_files = [_][]const u8{
            "src/misc/riscos/SDL_sysurl.c",
        };
    };

    pub const unix = struct {
        pub const c_files = [_][]const u8{
            "src/misc/unix/SDL_sysurl.c",
        };
    };

    pub const vita = struct {
        pub const c_files = [_][]const u8{
            "src/misc/vita/SDL_sysurl.c",
        };
    };

    pub const windows = struct {
        pub const c_files = [_][]const u8{
            "src/misc/windows/SDL_sysurl.c",
        };
    };
};

pub const power = struct {
    pub const c_files = [_][]const u8{
        "src/power/SDL_power.c",
    };

    pub const android = struct {
        pub const c_files = [_][]const u8{
            "src/power/android/SDL_syspower.c",
        };
    };

    pub const emscripten = struct {
        pub const c_files = [_][]const u8{
            "src/power/emscripten/SDL_syspower.c",
        };
    };

    pub const haiku = struct {
        pub const c_files = [_][]const u8{
            "src/power/haiku/SDL_syspower.c",
        };
    };

    pub const linux = struct {
        pub const c_files = [_][]const u8{
            "src/power/linux/SDL_syspower.c",
        };
    };

    pub const macos = struct {
        pub const c_files = [_][]const u8{
            "src/power/macos/SDL_syspower.c",
        };
    };

    pub const n3ds = struct {
        pub const c_files = [_][]const u8{
            "src/power/n3ds/SDL_syspower.c",
        };
    };

    pub const psp = struct {
        pub const c_files = [_][]const u8{
            "src/power/psp/SDL_syspower.c",
        };
    };

    pub const uikit = struct {
        pub const objective_c_files = [_][]const u8{
            "src/power/uikit/SDL_syspower.m",
        };
    };

    pub const vita = struct {
        pub const c_files = [_][]const u8{
            "src/power/vita/SDL_syspower.c",
        };
    };

    pub const windows = struct {
        pub const c_files = [_][]const u8{
            "src/power/windows/SDL_syspower.c",
        };
    };
};

pub const process = struct {
    pub const c_files = [_][]const u8{
        "src/process/SDL_process.c",
    };

    pub const dummy = struct {
        pub const c_files = [_][]const u8{
            "src/process/dummy/SDL_dummyprocess.c",
        };
    };

    pub const posix = struct {
        pub const c_files = [_][]const u8{
            "src/process/posix/SDL_posixprocess.c",
        };
    };

    pub const windows = struct {
        pub const c_files = [_][]const u8{
            "src/process/windows/SDL_windowsprocess.c",
        };
    };
};

pub const render = struct {
    pub const c_files = [_][]const u8{
        "src/render/SDL_d3dmath.c",
        "src/render/SDL_render.c",
        "src/render/SDL_render_unsupported.c",
        "src/render/SDL_yuv_sw.c",
    };

    pub const direct3d = struct {
        pub const c_files = [_][]const u8{
            "src/render/direct3d/SDL_render_d3d.c",
            "src/render/direct3d/SDL_shaders_d3d.c",
        };
    };

    pub const direct3d11 = struct {
        pub const c_files = [_][]const u8{
            "src/render/direct3d11/SDL_render_d3d11.c",
            "src/render/direct3d11/SDL_shaders_d3d11.c",
        };
    };

    pub const direct3d12 = struct {
        pub const c_files = [_][]const u8{
            "src/render/direct3d12/SDL_render_d3d12.c",
            "src/render/direct3d12/SDL_shaders_d3d12.c",
        };

        pub const cpp_files = [_][]const u8{
            "src/render/direct3d12/SDL_render_d3d12_xbox.cpp",
            "src/render/direct3d12/SDL_shaders_d3d12_xboxone.cpp",
            "src/render/direct3d12/SDL_shaders_d3d12_xboxseries.cpp",
        };
    };

    pub const gpu = struct {
        pub const c_files = [_][]const u8{
            "src/render/gpu/SDL_pipeline_gpu.c",
            "src/render/gpu/SDL_render_gpu.c",
            "src/render/gpu/SDL_shaders_gpu.c",
        };
    };

    pub const metal = struct {
        pub const objective_c_files = [_][]const u8{
            "src/render/metal/SDL_render_metal.m",
        };
    };

    pub const opengl = struct {
        pub const c_files = [_][]const u8{
            "src/render/opengl/SDL_render_gl.c",
            "src/render/opengl/SDL_shaders_gl.c",
        };
    };

    pub const opengles2 = struct {
        pub const c_files = [_][]const u8{
            "src/render/opengles2/SDL_render_gles2.c",
            "src/render/opengles2/SDL_shaders_gles2.c",
        };
    };

    pub const ps2 = struct {
        pub const c_files = [_][]const u8{
            "src/render/ps2/SDL_render_ps2.c",
        };
    };

    pub const psp = struct {
        pub const c_files = [_][]const u8{
            "src/render/psp/SDL_render_psp.c",
        };
    };

    pub const software = struct {
        pub const c_files = [_][]const u8{
            "src/render/software/SDL_blendfillrect.c",
            "src/render/software/SDL_blendline.c",
            "src/render/software/SDL_blendpoint.c",
            "src/render/software/SDL_drawline.c",
            "src/render/software/SDL_drawpoint.c",
            "src/render/software/SDL_render_sw.c",
            "src/render/software/SDL_rotate.c",
            "src/render/software/SDL_triangle.c",
        };
    };

    pub const vitagxm = struct {
        pub const c_files = [_][]const u8{
            "src/render/vitagxm/SDL_render_vita_gxm.c",
            "src/render/vitagxm/SDL_render_vita_gxm_memory.c",
            "src/render/vitagxm/SDL_render_vita_gxm_tools.c",
        };
    };

    pub const vulkan = struct {
        pub const c_files = [_][]const u8{
            "src/render/vulkan/SDL_render_vulkan.c",
            "src/render/vulkan/SDL_shaders_vulkan.c",
        };
    };
};

pub const sensor = struct {
    pub const c_files = [_][]const u8{
        "src/sensor/SDL_sensor.c",
    };

    pub const android = struct {
        pub const c_files = [_][]const u8{
            "src/sensor/android/SDL_androidsensor.c",
        };
    };

    pub const coremotion = struct {
        pub const objective_c_files = [_][]const u8{
            "src/sensor/coremotion/SDL_coremotionsensor.m",
        };
    };

    pub const dummy = struct {
        pub const c_files = [_][]const u8{
            "src/sensor/dummy/SDL_dummysensor.c",
        };
    };

    pub const n3ds = struct {
        pub const c_files = [_][]const u8{
            "src/sensor/n3ds/SDL_n3dssensor.c",
        };
    };

    pub const vita = struct {
        pub const c_files = [_][]const u8{
            "src/sensor/vita/SDL_vitasensor.c",
        };
    };

    pub const windows = struct {
        pub const c_files = [_][]const u8{
            "src/sensor/windows/SDL_windowssensor.c",
        };
    };
};

pub const stdlib = struct {
    pub const c_files = [_][]const u8{
        "src/stdlib/SDL_crc16.c",
        "src/stdlib/SDL_crc32.c",
        "src/stdlib/SDL_getenv.c",
        "src/stdlib/SDL_iconv.c",
        "src/stdlib/SDL_malloc.c",
        "src/stdlib/SDL_memcpy.c",
        "src/stdlib/SDL_memmove.c",
        "src/stdlib/SDL_memset.c",
        "src/stdlib/SDL_mslibc.c",
        "src/stdlib/SDL_murmur3.c",
        "src/stdlib/SDL_qsort.c",
        "src/stdlib/SDL_random.c",
        "src/stdlib/SDL_stdlib.c",
        "src/stdlib/SDL_string.c",
        "src/stdlib/SDL_strtokr.c",
    };
};

pub const storage = struct {
    pub const c_files = [_][]const u8{
        "src/storage/SDL_storage.c",
    };

    pub const generic = struct {
        pub const c_files = [_][]const u8{
            "src/storage/generic/SDL_genericstorage.c",
        };
    };

    pub const steam = struct {
        pub const c_files = [_][]const u8{
            "src/storage/steam/SDL_steamstorage.c",
        };
    };
};

pub const thread = struct {
    pub const c_files = [_][]const u8{
        "src/thread/SDL_thread.c",
    };

    pub const generic = struct {
        pub const c_files = [_][]const u8{
            "src/thread/generic/SDL_syscond.c",
            "src/thread/generic/SDL_sysmutex.c",
            "src/thread/generic/SDL_sysrwlock.c",
            "src/thread/generic/SDL_syssem.c",
            "src/thread/generic/SDL_systhread.c",
            "src/thread/generic/SDL_systls.c",
        };
    };

    pub const n3ds = struct {
        pub const c_files = [_][]const u8{
            "src/thread/n3ds/SDL_syscond.c",
            "src/thread/n3ds/SDL_sysmutex.c",
            "src/thread/n3ds/SDL_syssem.c",
            "src/thread/n3ds/SDL_systhread.c",
        };
    };

    pub const ngage = struct {
        pub const cpp_files = [_][]const u8{
            "src/thread/ngage/SDL_sysmutex.cpp",
            "src/thread/ngage/SDL_syssem.cpp",
            "src/thread/ngage/SDL_systhread.cpp",
        };
    };

    pub const ps2 = struct {
        pub const c_files = [_][]const u8{
            "src/thread/ps2/SDL_syssem.c",
            "src/thread/ps2/SDL_systhread.c",
        };
    };

    pub const psp = struct {
        pub const c_files = [_][]const u8{
            "src/thread/psp/SDL_sysmutex.c",
            "src/thread/psp/SDL_syssem.c",
            "src/thread/psp/SDL_systhread.c",
        };
    };

    pub const pthread = struct {
        pub const c_files = [_][]const u8{
            "src/thread/pthread/SDL_syscond.c",
            "src/thread/pthread/SDL_sysmutex.c",
            "src/thread/pthread/SDL_sysrwlock.c",
            "src/thread/pthread/SDL_syssem.c",
            "src/thread/pthread/SDL_systhread.c",
            "src/thread/pthread/SDL_systls.c",
        };
    };

    pub const vita = struct {
        pub const c_files = [_][]const u8{
            "src/thread/vita/SDL_sysmutex.c",
            "src/thread/vita/SDL_syssem.c",
            "src/thread/vita/SDL_systhread.c",
        };
    };

    pub const windows = struct {
        pub const c_files = [_][]const u8{
            "src/thread/windows/SDL_syscond_cv.c",
            "src/thread/windows/SDL_sysmutex.c",
            "src/thread/windows/SDL_sysrwlock_srw.c",
            "src/thread/windows/SDL_syssem.c",
            "src/thread/windows/SDL_systhread.c",
            "src/thread/windows/SDL_systls.c",
        };
    };
};

pub const time = struct {
    pub const c_files = [_][]const u8{
        "src/time/SDL_time.c",
    };

    pub const n3ds = struct {
        pub const c_files = [_][]const u8{
            "src/time/n3ds/SDL_systime.c",
        };
    };

    pub const ps2 = struct {
        pub const c_files = [_][]const u8{
            "src/time/ps2/SDL_systime.c",
        };
    };

    pub const psp = struct {
        pub const c_files = [_][]const u8{
            "src/time/psp/SDL_systime.c",
        };
    };

    pub const unix = struct {
        pub const c_files = [_][]const u8{
            "src/time/unix/SDL_systime.c",
        };
    };

    pub const vita = struct {
        pub const c_files = [_][]const u8{
            "src/time/vita/SDL_systime.c",
        };
    };

    pub const windows = struct {
        pub const c_files = [_][]const u8{
            "src/time/windows/SDL_systime.c",
        };
    };
};

pub const timer = struct {
    pub const c_files = [_][]const u8{
        "src/timer/SDL_timer.c",
    };

    pub const haiku = struct {
        pub const c_files = [_][]const u8{
            "src/timer/haiku/SDL_systimer.c",
        };
    };

    pub const n3ds = struct {
        pub const c_files = [_][]const u8{
            "src/timer/n3ds/SDL_systimer.c",
        };
    };

    pub const ngage = struct {
        pub const cpp_files = [_][]const u8{
            "src/timer/ngage/SDL_systimer.cpp",
        };
    };

    pub const ps2 = struct {
        pub const c_files = [_][]const u8{
            "src/timer/ps2/SDL_systimer.c",
        };
    };

    pub const psp = struct {
        pub const c_files = [_][]const u8{
            "src/timer/psp/SDL_systimer.c",
        };
    };

    pub const unix = struct {
        pub const c_files = [_][]const u8{
            "src/timer/unix/SDL_systimer.c",
        };
    };

    pub const vita = struct {
        pub const c_files = [_][]const u8{
            "src/timer/vita/SDL_systimer.c",
        };
    };

    pub const windows = struct {
        pub const c_files = [_][]const u8{
            "src/timer/windows/SDL_systimer.c",
        };
    };
};

pub const tray = struct {
    pub const c_files = [_][]const u8{
        "src/tray/SDL_tray_utils.c",
    };

    pub const cocoa = struct {
        pub const objective_c_files = [_][]const u8{
            "src/tray/cocoa/SDL_tray.m",
        };
    };

    pub const dummy = struct {
        pub const c_files = [_][]const u8{
            "src/tray/dummy/SDL_tray.c",
        };
    };

    pub const unix = struct {
        pub const c_files = [_][]const u8{
            "src/tray/unix/SDL_tray.c",
        };
    };

    pub const windows = struct {
        pub const c_files = [_][]const u8{
            "src/tray/windows/SDL_tray.c",
        };
    };
};

pub const video = struct {
    pub const c_files = [_][]const u8{
        "src/video/SDL_RLEaccel.c",
        "src/video/SDL_blit.c",
        "src/video/SDL_blit_0.c",
        "src/video/SDL_blit_1.c",
        "src/video/SDL_blit_A.c",
        "src/video/SDL_blit_N.c",
        "src/video/SDL_blit_auto.c",
        "src/video/SDL_blit_copy.c",
        "src/video/SDL_blit_slow.c",
        "src/video/SDL_bmp.c",
        "src/video/SDL_clipboard.c",
        "src/video/SDL_egl.c",
        "src/video/SDL_fillrect.c",
        "src/video/SDL_pixels.c",
        "src/video/SDL_rect.c",
        "src/video/SDL_stretch.c",
        "src/video/SDL_surface.c",
        "src/video/SDL_video.c",
        "src/video/SDL_video_unsupported.c",
        "src/video/SDL_vulkan_utils.c",
        "src/video/SDL_yuv.c",
    };

    pub const android = struct {
        pub const c_files = [_][]const u8{
            "src/video/android/SDL_androidclipboard.c",
            "src/video/android/SDL_androidevents.c",
            "src/video/android/SDL_androidgl.c",
            "src/video/android/SDL_androidkeyboard.c",
            "src/video/android/SDL_androidmessagebox.c",
            "src/video/android/SDL_androidmouse.c",
            "src/video/android/SDL_androidpen.c",
            "src/video/android/SDL_androidtouch.c",
            "src/video/android/SDL_androidvideo.c",
            "src/video/android/SDL_androidvulkan.c",
            "src/video/android/SDL_androidwindow.c",
        };
    };

    pub const cocoa = struct {
        pub const objective_c_files = [_][]const u8{
            "src/video/cocoa/SDL_cocoaclipboard.m",
            "src/video/cocoa/SDL_cocoaevents.m",
            "src/video/cocoa/SDL_cocoakeyboard.m",
            "src/video/cocoa/SDL_cocoamessagebox.m",
            "src/video/cocoa/SDL_cocoametalview.m",
            "src/video/cocoa/SDL_cocoamodes.m",
            "src/video/cocoa/SDL_cocoamouse.m",
            "src/video/cocoa/SDL_cocoaopengl.m",
            "src/video/cocoa/SDL_cocoaopengles.m",
            "src/video/cocoa/SDL_cocoapen.m",
            "src/video/cocoa/SDL_cocoashape.m",
            "src/video/cocoa/SDL_cocoavideo.m",
            "src/video/cocoa/SDL_cocoavulkan.m",
            "src/video/cocoa/SDL_cocoawindow.m",
        };
    };

    pub const dummy = struct {
        pub const c_files = [_][]const u8{
            "src/video/dummy/SDL_nullevents.c",
            "src/video/dummy/SDL_nullframebuffer.c",
            "src/video/dummy/SDL_nullvideo.c",
        };
    };

    pub const emscripten = struct {
        pub const c_files = [_][]const u8{
            "src/video/emscripten/SDL_emscriptenevents.c",
            "src/video/emscripten/SDL_emscriptenframebuffer.c",
            "src/video/emscripten/SDL_emscriptenmouse.c",
            "src/video/emscripten/SDL_emscriptenopengles.c",
            "src/video/emscripten/SDL_emscriptenvideo.c",
        };
    };

    pub const gdk = struct {
        pub const cpp_files = [_][]const u8{
            "src/video/gdk/SDL_gdktextinput.cpp",
        };
    };

    pub const haiku = struct {
        pub const cpp_files = [_][]const u8{
            "src/video/haiku/SDL_bclipboard.cc",
            "src/video/haiku/SDL_bevents.cc",
            "src/video/haiku/SDL_bframebuffer.cc",
            "src/video/haiku/SDL_bkeyboard.cc",
            "src/video/haiku/SDL_bmessagebox.cc",
            "src/video/haiku/SDL_bmodes.cc",
            "src/video/haiku/SDL_bopengl.cc",
            "src/video/haiku/SDL_bvideo.cc",
            "src/video/haiku/SDL_bwindow.cc",
        };
    };

    pub const kmsdrm = struct {
        pub const c_files = [_][]const u8{
            "src/video/kmsdrm/SDL_kmsdrmdyn.c",
            "src/video/kmsdrm/SDL_kmsdrmevents.c",
            "src/video/kmsdrm/SDL_kmsdrmmouse.c",
            "src/video/kmsdrm/SDL_kmsdrmopengles.c",
            "src/video/kmsdrm/SDL_kmsdrmvideo.c",
            "src/video/kmsdrm/SDL_kmsdrmvulkan.c",
        };
    };

    pub const n3ds = struct {
        pub const c_files = [_][]const u8{
            "src/video/n3ds/SDL_n3dsevents.c",
            "src/video/n3ds/SDL_n3dsframebuffer.c",
            "src/video/n3ds/SDL_n3dsswkb.c",
            "src/video/n3ds/SDL_n3dstouch.c",
            "src/video/n3ds/SDL_n3dsvideo.c",
        };
    };

    pub const ngage = struct {
        pub const cpp_files = [_][]const u8{
            "src/video/ngage/SDL_ngageevents.cpp",
            "src/video/ngage/SDL_ngageframebuffer.cpp",
            "src/video/ngage/SDL_ngagevideo.cpp",
            "src/video/ngage/SDL_ngagewindow.cpp",
        };
    };

    pub const offscreen = struct {
        pub const c_files = [_][]const u8{
            "src/video/offscreen/SDL_offscreenevents.c",
            "src/video/offscreen/SDL_offscreenframebuffer.c",
            "src/video/offscreen/SDL_offscreenopengles.c",
            "src/video/offscreen/SDL_offscreenvideo.c",
            "src/video/offscreen/SDL_offscreenvulkan.c",
            "src/video/offscreen/SDL_offscreenwindow.c",
        };
    };

    pub const openvr = struct {
        pub const c_files = [_][]const u8{
            "src/video/openvr/SDL_openvrvideo.c",
        };
    };

    pub const ps2 = struct {
        pub const c_files = [_][]const u8{
            "src/video/ps2/SDL_ps2video.c",
        };
    };

    pub const psp = struct {
        pub const c_files = [_][]const u8{
            "src/video/psp/SDL_pspevents.c",
            "src/video/psp/SDL_pspgl.c",
            "src/video/psp/SDL_pspmouse.c",
            "src/video/psp/SDL_pspvideo.c",
        };
    };

    pub const qnx = struct {
        pub const c_files = [_][]const u8{
            "src/video/qnx/SDL_qnxgl.c",
            "src/video/qnx/SDL_qnxkeyboard.c",
            "src/video/qnx/SDL_qnxvideo.c",
        };
    };

    pub const raspberry = struct {
        pub const c_files = [_][]const u8{
            "src/video/raspberry/SDL_rpievents.c",
            "src/video/raspberry/SDL_rpimouse.c",
            "src/video/raspberry/SDL_rpiopengles.c",
            "src/video/raspberry/SDL_rpivideo.c",
        };
    };

    pub const riscos = struct {
        pub const c_files = [_][]const u8{
            "src/video/riscos/SDL_riscosevents.c",
            "src/video/riscos/SDL_riscosframebuffer.c",
            "src/video/riscos/SDL_riscosmessagebox.c",
            "src/video/riscos/SDL_riscosmodes.c",
            "src/video/riscos/SDL_riscosmouse.c",
            "src/video/riscos/SDL_riscosvideo.c",
            "src/video/riscos/SDL_riscoswindow.c",
        };
    };

    pub const uikit = struct {
        pub const objective_c_files = [_][]const u8{
            "src/video/uikit/SDL_uikitappdelegate.m",
            "src/video/uikit/SDL_uikitclipboard.m",
            "src/video/uikit/SDL_uikitevents.m",
            "src/video/uikit/SDL_uikitmessagebox.m",
            "src/video/uikit/SDL_uikitmetalview.m",
            "src/video/uikit/SDL_uikitmodes.m",
            "src/video/uikit/SDL_uikitopengles.m",
            "src/video/uikit/SDL_uikitopenglview.m",
            "src/video/uikit/SDL_uikitpen.m",
            "src/video/uikit/SDL_uikitvideo.m",
            "src/video/uikit/SDL_uikitview.m",
            "src/video/uikit/SDL_uikitviewcontroller.m",
            "src/video/uikit/SDL_uikitvulkan.m",
            "src/video/uikit/SDL_uikitwindow.m",
        };
    };

    pub const vita = struct {
        pub const c_files = [_][]const u8{
            "src/video/vita/SDL_vitaframebuffer.c",
            "src/video/vita/SDL_vitagl_pvr.c",
            "src/video/vita/SDL_vitagles.c",
            "src/video/vita/SDL_vitagles_pvr.c",
            "src/video/vita/SDL_vitakeyboard.c",
            "src/video/vita/SDL_vitamessagebox.c",
            "src/video/vita/SDL_vitamouse.c",
            "src/video/vita/SDL_vitatouch.c",
            "src/video/vita/SDL_vitavideo.c",
        };
    };

    pub const vivante = struct {
        pub const c_files = [_][]const u8{
            "src/video/vivante/SDL_vivanteopengles.c",
            "src/video/vivante/SDL_vivanteplatform.c",
            "src/video/vivante/SDL_vivantevideo.c",
            "src/video/vivante/SDL_vivantevulkan.c",
        };
    };

    pub const wayland = struct {
        pub const c_files = [_][]const u8{
            "src/video/wayland/SDL_waylandclipboard.c",
            "src/video/wayland/SDL_waylanddatamanager.c",
            "src/video/wayland/SDL_waylanddyn.c",
            "src/video/wayland/SDL_waylandevents.c",
            "src/video/wayland/SDL_waylandkeyboard.c",
            "src/video/wayland/SDL_waylandmessagebox.c",
            "src/video/wayland/SDL_waylandmouse.c",
            "src/video/wayland/SDL_waylandopengles.c",
            "src/video/wayland/SDL_waylandshmbuffer.c",
            "src/video/wayland/SDL_waylandvideo.c",
            "src/video/wayland/SDL_waylandvulkan.c",
            "src/video/wayland/SDL_waylandwindow.c",
        };
    };

    pub const windows = struct {
        pub const c_files = [_][]const u8{
            "src/video/windows/SDL_surface_utils.c",
            "src/video/windows/SDL_windowsclipboard.c",
            "src/video/windows/SDL_windowsevents.c",
            "src/video/windows/SDL_windowsframebuffer.c",
            "src/video/windows/SDL_windowsgameinput.c",
            "src/video/windows/SDL_windowskeyboard.c",
            "src/video/windows/SDL_windowsmessagebox.c",
            "src/video/windows/SDL_windowsmodes.c",
            "src/video/windows/SDL_windowsmouse.c",
            "src/video/windows/SDL_windowsopengl.c",
            "src/video/windows/SDL_windowsopengles.c",
            "src/video/windows/SDL_windowsrawinput.c",
            "src/video/windows/SDL_windowsshape.c",
            "src/video/windows/SDL_windowsvideo.c",
            "src/video/windows/SDL_windowsvulkan.c",
            "src/video/windows/SDL_windowswindow.c",
        };
    };

    pub const x11 = struct {
        pub const c_files = [_][]const u8{
            "src/video/x11/SDL_x11clipboard.c",
            "src/video/x11/SDL_x11dyn.c",
            "src/video/x11/SDL_x11events.c",
            "src/video/x11/SDL_x11framebuffer.c",
            "src/video/x11/SDL_x11keyboard.c",
            "src/video/x11/SDL_x11messagebox.c",
            "src/video/x11/SDL_x11modes.c",
            "src/video/x11/SDL_x11mouse.c",
            "src/video/x11/SDL_x11opengl.c",
            "src/video/x11/SDL_x11opengles.c",
            "src/video/x11/SDL_x11pen.c",
            "src/video/x11/SDL_x11settings.c",
            "src/video/x11/SDL_x11shape.c",
            "src/video/x11/SDL_x11touch.c",
            "src/video/x11/SDL_x11video.c",
            "src/video/x11/SDL_x11vulkan.c",
            "src/video/x11/SDL_x11window.c",
            "src/video/x11/SDL_x11xfixes.c",
            "src/video/x11/SDL_x11xinput2.c",
            "src/video/x11/SDL_x11xsync.c",
            "src/video/x11/edid-parse.c",
            "src/video/x11/xsettings-client.c",
        };
    };

    pub const yuv2rgb = struct {
        pub const c_files = [_][]const u8{
            "src/video/yuv2rgb/yuv_rgb_lsx.c",
            "src/video/yuv2rgb/yuv_rgb_sse.c",
            "src/video/yuv2rgb/yuv_rgb_std.c",
        };
    };
};
